#!/bin/sh
show_help() {
    echo "trans <boo-source-file> [-o <output-file>]
trans -R <source-file-directory> [-o <output-folder>]"
}

translate_file() {
    ruby preprocess.rb $1 > tmp
    if [[ $2 = "" ]]; then
        txl tmp translate.txl
    else
        txl tmp translate.txl > $2
    fi
}

cleanup() {
    rm -f tmp.log
    trap - SIGHUP SIGINT SIGTERM
    exit
}

if [[ $# == 0 ]]; then
    show_help
else
    while [[ $# > 0 ]]; do
        case "$1" in
            -h)
                show_help
                exit 0
                ;;
            -o)
                OUTPUT_FILE=$2
                shift
                ;;
            -R)
                INPUT_FOLDER=$2
                shift
                ;;
            *)
                INPUT_FILE=$1
                ;;
        esac
        shift
    done
    if [[ $INPUT_FOLDER = "" ]]; then
        translate_file $INPUT_FILE $OUTPUT_FILE
    else
        if [[ $OUTPUT_FILE = "" ]]; then
            OUTPUT_FILE="output"
        fi
        SUC=0
        FAIL=0

        mkdir -p $OUTPUT_FILE
        IFS=$'\n'
        rm -f error.log

        trap cleanup SIGHUP SIGINT SIGTERM

        for f in `find $INPUT_FOLDER -name *.boo`; do
            fname=${f#$INPUT_FOLDER'/'}
            echo $f
            echo "-------
"$f"
"> tmp.log
            mkdir -p $OUTPUT_FILE"/"${fname%/*}
            translate_file $f $OUTPUT_FILE"/"${fname%boo}"cs" 2>> tmp.log
            if [[ $? = 0 ]]; then
                echo "\033[0;32mOK\033[0m"
                let SUC=$SUC+1
            else
                echo "\033[0;31mFailed\033[0m"
                cat tmp.log >> error.log
                let FAIL=$FAIL+1
            fi
        done
        rm -f tmp.log
        echo "Succeeded: "$SUC" Failed: "$FAIL
        trap - SIGHUP SIGINT SIGTERM
    fi
fi

